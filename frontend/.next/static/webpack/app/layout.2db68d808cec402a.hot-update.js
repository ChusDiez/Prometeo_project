"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/redux/examSlice.ts":
/*!********************************!*\
  !*** ./lib/redux/examSlice.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetchExamQuestions: () => (/* binding */ fetchExamQuestions),\n/* harmony export */   resetExam: () => (/* binding */ resetExam),\n/* harmony export */   setResults: () => (/* binding */ setResults),\n/* harmony export */   startExam: () => (/* binding */ startExam),\n/* harmony export */   submitAnswer: () => (/* binding */ submitAnswer),\n/* harmony export */   submitExamAnswers: () => (/* binding */ submitExamAnswers)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n// examSlice.ts\n\n/** ESTADO INICIAL */ const initialState = {\n    currentExam: null,\n    questions: [],\n    results: [],\n    loading: false,\n    error: null\n};\n/** THUNKS */ // Ejemplo: obtener preguntas del examen desde tu API\nconst fetchExamQuestions = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('exam/fetchExamQuestions', async (_, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        // Reemplaza con la URL real de tu backend\n        const response = await fetch('https://tu-api.com/exam/questions');\n        if (!response.ok) {\n            throw new Error('Error al cargar preguntas');\n        }\n        const data = await response.json();\n        return data;\n    } catch (err) {\n        return rejectWithValue(err.message);\n    }\n});\nconst submitExamAnswers = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)('exam/submitExamAnswers', async (payload, param)=>{\n    let { rejectWithValue } = param;\n    try {\n        const response = await fetch('https://tu-api.com/exam/submit-answers', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n            throw new Error('Error al enviar respuestas');\n        }\n        const data = await response.json();\n        return data; // Podrías devolver, por ejemplo, la nota final\n    } catch (err) {\n        return rejectWithValue(err.message);\n    }\n});\n/** SLICE */ const examSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: 'exam',\n    initialState,\n    reducers: {\n        startExam (state, action) {\n            state.currentExam = action.payload;\n        },\n        submitAnswer (state, action) {\n            // Ejemplo: agregamos la pregunta respondida a un array\n            // (Podrías guardar también la respuesta del usuario)\n            state.questions.push(action.payload);\n        },\n        setResults (state, action) {\n            state.results = action.payload;\n        },\n        resetExam (state) {\n            state.currentExam = null;\n            state.questions = [];\n            state.results = [];\n            state.loading = false;\n            state.error = null;\n        }\n    },\n    /** extraReducers para manejar los thunks */ extraReducers: (builder)=>{\n        // fetchExamQuestions\n        builder.addCase(fetchExamQuestions.pending, (state)=>{\n            state.loading = true;\n            state.error = null;\n        });\n        builder.addCase(fetchExamQuestions.fulfilled, (state, action)=>{\n            state.loading = false;\n            state.questions = action.payload; // Guardamos las preguntas en el estado\n        });\n        builder.addCase(fetchExamQuestions.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.payload || 'Error al cargar preguntas';\n        });\n        // submitExamAnswers\n        builder.addCase(submitExamAnswers.pending, (state)=>{\n            state.loading = true;\n            state.error = null;\n        });\n        builder.addCase(submitExamAnswers.fulfilled, (state, action)=>{\n            state.loading = false;\n        // Por ejemplo, podrías guardar la nota o resultados devueltos por el backend\n        // state.results = action.payload.results; // Depende de tu respuesta\n        });\n        builder.addCase(submitExamAnswers.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = action.payload || 'Error al enviar respuestas';\n        });\n    }\n});\n/** Exportar acciones sincronas y el reducer */ const { startExam, submitAnswer, setResults, resetExam } = examSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (examSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/redux/examSlice.ts\n"));

/***/ })

});